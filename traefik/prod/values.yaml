globalArguments:
  - "--global.sendanonymoususage=false"
  - "--global.checknewversion=false"

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=DEBUG"
  # for external service file providers config
  #- "--providers.file.directory=/config"
  # stream line access logs and traefik logs to log files 
  # followed this https://community.traefik.io/t/how-can-i-write-access-log-as-file-in-k8s-ingress-installed-by-helm-chart/14119/5
  # - "--log.filepath=/var/log/traefik/traefik.log"
  # - "--accesslog.filepath=/var/log/traefik/traefik-access.log"
  # - "--accessLog.format=json"
  # - "--providers.kubernetesGateway.experimentalChannel=true"

deployment:
  enabled: true
  replicas: 1
  annotations: {}
  podAnnotations: {}
  additionalContainers: []
  initContainers: []
  # stream-line logs to log files
#   additionalVolumes:
#     - name: traefik-logs
#       emptyDir: {}

# additionalVolumeMounts:
#   - name: traefik-logs
#     mountPath: /var/log/traefik

# 30.0.2
# ports:
#   web:
#     redirectTo:
#       port: websecure
#       priority: 10
#   websecure:
#     http3:
#       enabled: true
#     advertisedPort: 4443
#     tls:
#       enabled: true

# 34.4.1 update   
ports:
  web: 
    expose:
      default: true
  websecure:
    expose:
      default: true
    http3:
      enabled: true
    advertisedPort: 4443
    tls:
      enabled: true

ingressRoute:
  dashboard:
    enabled: false

providers:
  kubernetesCRD:
    enabled: true
    ingressClass: traefik-external
    allowExternalNameServices: true
    allowCrossNamespace: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: false
#   kubernetesGateway:
#     # -- Enable Traefik Gateway provider for Gateway API
#     enabled: true
#     # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
#     # This option currently enables support for TCPRoute and TLSRoute.
#     experimentalChannel: true
#     # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
#     namespaces: ["npm"]
#     # -- A label selector can be defined to filter on specific GatewayClass objects only.
#     labelselector:
#   file:
#     enabled: true
#     watch: true

# # Traefik experimental features
# experimental:
#   # -- Enable traefik experimental plugins
#   plugins: {}
#   # demo:
#   #   moduleName: github.com/traefik/plugindemo
#   #   version: v0.2.1
#   kubernetesGateway:
#     # -- Enable traefik experimental GatewayClass CRD
#     enabled: true

# volumes:
#   - name: ext-services
#     mountPath: "/config"
#     type: configMap

logs:
  general:
      level: INFO  # INFO, DEBUG, ERROR
  access:
    enabled: true
    format: json

rbac:
  enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  spec:
    loadBalancerIP: 192.168.0.32 # this should be an IP in the MetalLB range
  loadBalancerSourceRanges: []
  externalIPs: []

# gateway:
#   listeners:
#     websecure:
#       # -- TLS behavior for the TLS session initiated by the client. See [TLSModeType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.TLSModeType).
#       mode: Passthrough
# gatewayClass:
#   # -- When providers.kubernetesGateway.enabled and gateway.enabled, deploy a default gatewayClass
#   enabled: true
#   # -- Set a custom name to GatewayClass
#   name:
#   # -- Additional gatewayClass labels (e.g. for filtering gateway objects by custom labels)
#   labels: